// Generated by CoffeeScript 1.7.1
(function() {
  var app;

  app = angular.module('chatspam', []);

  app.controller('ChatspamController', function($scope) {
    var act_alias_name, generate_act_alias, generate_say_alias, newItem, random_name, say_alias_name;
    $scope.items = [];
    $scope.config = '// Your configuration will appear here after pressing "Generate"';
    $scope.bind = '';
    newItem = function(message) {
      if (message == null) {
        message = '';
      }
      return {
        message: message,
        focus: true
      };
    };
    random_name = function() {
      return Math.floor((1 + Math.random()) * 0x100000000).toString(16).substring(1);
    };
    say_alias_name = function(name, index) {
      return name + '_' + index;
    };
    act_alias_name = function(say_alias) {
      return say_alias + '_act';
    };
    generate_say_alias = function(say_alias, message) {
      return 'alias "' + say_alias + '" "say ' + message + '"';
    };
    generate_act_alias = function(name, act_alias, say_alias, next) {
      return 'alias "' + act_alias + '" "' + say_alias + '; alias ' + name + ' ' + next + '"';
    };
    $scope.addItem = function(message) {
      return $scope.items.push(newItem(message));
    };
    $scope.generate = function() {
      var act_aliases, aliases, bind, config, first_alias, name, say_aliases;
      name = random_name();
      aliases = [];
      say_aliases = [];
      act_aliases = [];
      _.each($scope.items, function(item, index) {
        var say_alias;
        say_alias = say_alias_name(name, index);
        say_aliases.push(say_alias);
        return aliases.push(generate_say_alias(say_alias, item.message));
      });
      _.each(say_aliases, function(say_alias, index) {
        var act_alias, next;
        act_alias = act_alias_name(say_alias);
        act_aliases.push(act_alias);
        if (index === say_aliases.length - 1) {
          next = act_aliases[0];
        } else {
          next = act_alias_name(say_aliases[index + 1]);
        }
        return aliases.push(generate_act_alias(name, act_alias, say_alias, next));
      });
      first_alias = 'alias "' + name + '" "' + act_aliases[0] + '"';
      bind = 'bind "' + $scope.bind + '" "' + name + '"';
      config = [aliases.join(';\n'), first_alias, bind];
      return $scope.config = config.join(';\n');
    };
    return $scope.addItem();
  });

  app.directive('messages', function() {
    return function($scope) {
      return $scope.$on('enter', function(evt, data) {
        return $scope.$apply(function() {
          if (data.index === $scope.items.length - 1) {
            return $scope.addItem();
          } else {
            return $scope.items[data.index + 1].focus = true;
          }
        });
      });
    };
  });

  app.directive('message', function() {
    return {
      restrict: 'A',
      scope: {
        item: '=',
        index: '='
      },
      controller: function($scope, $element) {
        var RETURN;
        RETURN = 13;
        $scope.$watch('item.focus', function() {
          $element[0].focus();
          return $scope.item.focus = false;
        });
        return $element.on('keypress', function(evt) {
          if (evt.keyCode === RETURN) {
            return $scope.$emit('enter', {
              item: $scope.item,
              index: $scope.index
            });
          }
        });
      }
    };
  });

}).call(this);

//# sourceMappingURL=chatspam.map
